# simple.world - basic world file example
# Authors: Richard Vaughan
# $Id$

include "pioneer.inc"
include "map.inc"
include "sick.inc"

# time to pause (in GUI mode) or quit (in headless mode (-g)) the simulation
quit_time 3600 # 1 hour of simulated time

paused 1

# spatial resolution of the underlying occupancy grid. Default is 0.02m.
resolution 0.02

# set the multiple of real time that Stage should try to achieve. Default is 1. 
# set to 0 to go as fast as possible.
speedup 1 

# configure the GUI window
window
(
  size [ 635.000 666.000 ] # in pixels
  scale 40   # pixels per meter
  center [ 5  4 ]
  rotate [ 0  0 ]
  			
  show_data 1              # 1=on 0=off
)

# load an environment bitmap
floorplan
( 
  name "cave"
  size [10.000 8.000 0.800]
  pose [5 4 0 0]
  bitmap "bitmaps/salton_world.png"
)

# the robot model
saltonBot
(		  
  # can refer to the robot by this name
  name "r0"
  pose [ 1 1 0 0 ]
  
  # pioneer2dx's sonars	will be ranger:0 and the laser will be ranger:1
  saltonLaser( pose [ 0 0 0 0 ] ) 
 
  # demonstrate a plugin controller, implemented in examples/ctrl/wander.cc
  # you probably should comment this out when using simple.cfg with Player
  ctrl "wander_drive"
  
  # report error-ful position in world coordinates
  localization "odom"
  localization_origin [ 0 0 0 0 ]
)

# dummy model used only to create the particles with 'random_particles'
define puck model(
  size [ 0.080 0.080 0.100 ]
  gui_move 1    # the model can be moved by the mouse in the GUI window
  gui_nose 1    # draw a nose on the model showing its heading (positive X axis)
  gui_outline 0        # draw a bounding box around the model, indicating its size
  obstacle_return 0   # this model can collide with other models that have this property set
  ranger_return -1     # If negative, this model is invisible to ranger sensors, and does not block propogation of range-sensing rays.
  fiducial_return 0
  gripper_return 0
  laser_return 0
  blob_return 0
)

# the dummy model used to generate particles for a robot 
puck
( 
  block(
  points 3
    point[0] [0 0]
    point[1] [0 1]
    point[2] [2 0.5]
    z [0 0.1]
  )
  name "r0_dummy" 
  pose [-3 -6 0 0 ] 
  #particle color
  color "red" 
  # this parts enables the random_particles controller
  # the parameters are:
  #  - number of particles
  #  - robot name
  #  - floorplane name
 
  # Attach rangefinder
  # saltonLaser( pose [ 0 0 0 0 ] )
  
  ctrl "random_particles 100 r0 cave"
)
